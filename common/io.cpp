#include "io.h"

int g_point_size = 0;

MLCSIO::MLCSIO(string filename) : filename(filename){
    
    ifstream f(filename);
    if(f.good()){
        string seq;
        while(!f.eof()){
            getline(f, seq);
            if(seq.size() > 1) seqs.push_back(seq);
        }
    }
        
}

void MLCSIO::output(ostream& os, string algo, string alphasets, string params){
    
    bool flag = false;
    if(seqs.size() == 0){
        os << "Test Set is empty!\n";
    }
    else{
        os << "Test set:" << endl;
        for(int i = 0; i < seqs.size(); i++){
            os << seqs[i] << endl;
        }
    }
    if(0){
        ; // dummy branch
    }
    // This part will be automatically generated by updateAlgo.sh 
    // alg program interface start 
else if(!exe_topmlcs(seqs, alphasets, os, algo)) flag = true;
else if(!exe_quickdp(seqs, alphasets, os, algo)) flag = true;
else if(!exe_promlcs(seqs, alphasets, os, algo, params)) flag = true;
else if(!exe_mlcsapp(seqs, alphasets, os, algo, params)) flag = true;
else if(!exe_hasmlcs(seqs, alphasets, os, algo, params)) flag = true;
    // alg program interface end 
    else{
        os << "'" << algo << "' is undefined.\n";
    }
    if(flag){
        cout << "\n----------------------------\nDone!\n";
    }
    
}
